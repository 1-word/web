name: deploy
# action 트리거 조건
on:
  push:
    branches:
      - deploy
# action 동작
jobs:
  # OS 환경
  run-test-build-code: 
    runs-on: ubuntu-22.04
    # Nodejs 런타임 정보 설정
    strategy:
      matrix:
        node-version: [16.x]
    env:
      CI: false

    steps:
          # 레포지토리 체크아웃
          - name: Checkout source code
            uses: actions/checkout@v2
          # node modules 캐싱
          - name: Cache node modules
            uses: actions/cache@v1
            with:
              path: node_modules
              key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
              restore-keys: |
                ${{ runner.OS }}-build-
                ${{ runner.OS }}-
          #- name: Use Node.js ${{ matrix.node-version }}
            #uses: actions/setup-node@v3
            #with:
              #node-version: ${{ matrix.node-version }}
              #cache: "npm"
          # 모듈 설치
          - name: Install modules
            run: npm install
          # test code 실행    # --> 테스트하는 코드가 없으므로 주석처리
          #- name: Run test codes
          #  run: npm run test
          # 빌드
          - name: Build project
            run: npm run build

  build-image:
    needs: run-test-build-code
    runs-on: ubuntu-22.04
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/word:web
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy-docker:
    needs: build-image
    name: deploy-server
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@master
      #- name: copy file via ssh password   # 도커 컴포즈 파일은 해당 프로젝트에 없으므로 주석 처리
      #  uses: appleboy/scp-action@master
      #  with:
      #    host: ${{ secrets.HOST }}
      #    username: ${{ secrets.USER_NAME }}
      #    key: ${{ secrets.PRIVATE_KEY }}
      #    port: ${{ secrets.PORT }}
      #    source: "docker-compose.yml"
      #    target: "/data/container/WordApp"
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER_NAME }}
          password: ${{ secrets.PASSWORD }}
          #key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /data/container/WordApp
            sudo docker-compose pull
            sudo docker-compose up -d
            